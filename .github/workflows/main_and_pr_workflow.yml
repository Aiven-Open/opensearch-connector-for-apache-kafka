name: Gradle
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  check:
    strategy:
      matrix:
        entry:
          - { opensearch-version: 1.3.20, java-version: 17 }
          - { opensearch-version: 2.19.3, java-version: 21 }
          - { opensearch-version: 2.19.3, java-version: 24 }
          - { opensearch-version: 3.2.0, java-version: 21 }
          - { opensearch-version: 3.2.0, java-version: 24 }
        runs-on: [ubuntu-latest]
    name: Check on ${{ matrix.runs-on }} (JDK-${{ matrix.entry.java-version }}, OpenSearch ${{ matrix.entry.opensearch-version }})
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up JDK ${{ matrix.entry.java-version }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.entry.java-version }}
          distribution: 'temurin'
          cache: gradle
      - name: Check and Test with Gradle
        if: ${{ matrix.runs-on == 'ubuntu-latest' }}
        run: ./gradlew check -Popensearch.testcontainers.image-version=${{ matrix.entry.opensearch-version }}
  build:
    strategy:
      matrix:
        java-version: [ 17, 21, 24 ]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
    name: Build on ${{ matrix.runs-on }} with jdk ${{ matrix.java-version }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: gradle
      - name: Build with Gradle
        run: ./gradlew build -x integrationTest
        
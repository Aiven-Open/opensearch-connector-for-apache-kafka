/*
 * Copyright 2019 - 2021 Aiven Oy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.diffplug.spotless" version "6.23.0"
    // https://docs.gradle.org/current/userguide/distribution_plugin.html
    id "distribution"
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'
        targetExclude ".*/**", "**/build/**", "**/.gradle/**"

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }

    java {
        licenseHeaderFile file("${rootDir}/gradle-config/java.header")
        importOrder("javax", "java", "org.apache.kafka", "org.opensearch", "io.aiven", "")
        removeUnusedImports()
        replaceRegex("No wildcard imports.", "import(?:\\s+static)?\\s+[^\\*\\s]+\\*;(\r\n|\r|\n)", '$1')
        eclipse().configFile("${rootDir}/gradle-config/aiven-eclipse-formatter.xml")
        indentWithSpaces()
        endWithNewline()
        trimTrailingWhitespace()
    }
}

wrapper {
    distributionType = 'ALL'
    doLast {
        final URI sha256Uri = new URI(wrapper.getDistributionUrl() + ".sha256")
        final String sha256Sum = new String(sha256Uri.toURL().bytes)
        wrapper.getPropertiesFile() << "distributionSha256Sum=${sha256Sum}\n"
        println "Added checksum to wrapper properties"
    }
}

distributions {
    main {
        contents {
            from {
                subprojects.findAll { it.getSubprojects().isEmpty() }.
                        collect { it.configurations.runtimeClasspath }
            }
        }
    }
}

allprojects {

    // https://docs.gradle.org/current/userguide/java_library_plugin.html
    apply plugin: "java-library"

    // https://docs.gradle.org/current/userguide/jacoco_plugin.html
    apply plugin: "jacoco"

    // https://docs.gradle.org/current/userguide/distribution_plugin.html
    apply plugin: "distribution"

    // https://docs.gradle.org/current/userguide/publishing_maven.html
    apply plugin: "maven-publish"

    // https://docs.gradle.org/current/userguide/idea_plugin.html
    apply plugin: 'idea'

    ext {
        kafkaVersion = "2.8.1"
        slf4jVersion = "1.7.36"
        openSearchVersion = "2.11.0"

        testcontainersVersion = "1.19.0"
        confluentPlatformVersion = "4.1.4"
    }


    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    compileJava {
        options.compilerArgs = ['-Xlint:all']
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    jacoco {
        toolVersion = "0.8.9"
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

    dependencies {
        implementation "org.slf4j:slf4j-api:$slf4jVersion"
        implementation "org.opensearch.client:opensearch-rest-client:$openSearchVersion"

        testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
        testImplementation "org.mockito:mockito-core:5.5.0"
        testImplementation "org.mockito:mockito-inline:5.2.0"
        testImplementation "org.mockito:mockito-junit-jupiter:5.5.0"

        testImplementation "org.apache.kafka:connect-api:$kafkaVersion"
        testImplementation "org.apache.kafka:connect-json:$kafkaVersion"
        testImplementation "com.fasterxml.jackson.core:jackson-core:2.15.3"
        testImplementation "com.fasterxml.jackson.core:jackson-databind:2.15.3"
        testImplementation "com.fasterxml.jackson.core:jackson-annotations:2.15.3"
        testRuntimeOnly "org.slf4j:slf4j-log4j12:$slf4jVersion"
    }

}
